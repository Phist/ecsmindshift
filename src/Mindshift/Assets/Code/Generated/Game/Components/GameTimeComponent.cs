//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity timeEntity { get { return GetGroup(GameMatcher.Time).GetSingleEntity(); } }
    public Assets.Code.Components.Time time { get { return timeEntity.time; } }
    public Assets.Code.Services.ITimeService Time { get { return time.Value; } }
    public bool hasTime { get { return timeEntity != null; } }

    public GameEntity SetTime(Assets.Code.Services.ITimeService newValue) {
        if (hasTime) {
            throw new Entitas.EntitasException("Could not set Time!\n" + this + " already has an entity with Assets.Code.Components.Time!",
                "You should check if the context already has a timeEntity before setting it or use context.ReplaceTime().");
        }
        var entity = CreateEntity();
        entity.AddTime(newValue);
        return entity;
    }

    public void ReplaceTime(Assets.Code.Services.ITimeService newValue) {
        var entity = timeEntity;
        if (entity == null) {
            entity = SetTime(newValue);
        } else {
            entity.ReplaceTime(newValue);
        }
    }

    public void RemoveTime() {
        timeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Assets.Code.Components.Time time { get { return (Assets.Code.Components.Time)GetComponent(GameComponentsLookup.Time); } }
    public Assets.Code.Services.ITimeService Time { get { return time.Value; } }
    public bool hasTime { get { return HasComponent(GameComponentsLookup.Time); } }

    public GameEntity AddTime(Assets.Code.Services.ITimeService newValue) {
        var index = GameComponentsLookup.Time;
        var component = (Assets.Code.Components.Time)CreateComponent(index, typeof(Assets.Code.Components.Time));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceTime(Assets.Code.Services.ITimeService newValue) {
        var index = GameComponentsLookup.Time;
        var component = (Assets.Code.Components.Time)CreateComponent(index, typeof(Assets.Code.Components.Time));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveTime() {
        RemoveComponent(GameComponentsLookup.Time);
        return this;
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTime;

    public static Entitas.IMatcher<GameEntity> Time {
        get {
            if (_matcherTime == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Time);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTime = matcher;
            }

            return _matcherTime;
        }
    }
}
